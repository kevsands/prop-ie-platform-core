/**
 * Prisma Client Global Instance
 * Singleton pattern to avoid multiple connections in development
 * Production-optimized configuration for AWS RDS
 */

import { PrismaClient } from '@prisma/client';
import { getPrismaConfig } from './db/production-config';

// Initialize PrismaClient with environment-specific configuration
const prismaClientSingleton = () => {
  const config = getPrismaConfig();
  return new PrismaClient(config);
};

// Use a global variable to store the client in development
declare global {
  // eslint-disable-next-line no-var
  var prisma: undefined | ReturnType<typeof prismaClientSingleton>;
}
}

// Create or reuse the client
const prisma = globalThis.prisma ?? prismaClientSingleton();

// Store the client in global in development
if (process.env.NODE_ENV !== 'production') globalThis.prisma = prisma;

export default prisma;
export { prisma };