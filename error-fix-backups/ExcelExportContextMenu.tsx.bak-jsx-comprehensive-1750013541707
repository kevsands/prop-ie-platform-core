'use client';

import React, { ReactNode } from 'react';
import {
  ContextMenu,
  ContextMenuContent,
  ContextMenuItem,
  ContextMenuSeparator,
  ContextMenuSub,
  ContextMenuSubContent,
  ContextMenuSubTrigger,
  ContextMenuTrigger,
} from '@/components/ui/context-menu';
import { 
  FileSpreadsheet, 
  Download, 
  BarChart3, 
  PieChart, 
  Calculator,
  Building2,
  DollarSign,
  FileText,
  TrendingUp
} from 'lucide-react';

interface ExcelExportContextMenuProps {
  children: ReactNode;
  data?: any;
  context: 'financial' | 'boq' | 'project' | 'general';
  onExport: (type: string, format: string) => void;
}

export function ExcelExportContextMenu({ 
  children, 
  data, 
  context, 
  onExport 
}: ExcelExportContextMenuProps) {
  
  const getContextualExports = () => {
    const baseExports = [
      { type: 'current-data', label: 'Current View', icon: FileText, description: 'Export visible data' },
      { type: 'full-report', label: 'Full Report', icon: FileSpreadsheet, description: 'Complete analysis' }
    ];

    switch (context) {
      case 'financial':
        return [
          ...baseExports,
          { type: 'financial-summary', label: 'Financial Summary', icon: DollarSign, description: 'Revenue, costs, margins' },
          { type: 'cash-flow', label: 'Cash Flow Analysis', icon: TrendingUp, description: '36-month projections' },
          { type: 'development-appraisal', label: 'Development Appraisal', icon: Calculator, description: 'Full financial model' },
          { type: 'roi-analysis', label: 'ROI Analysis', icon: BarChart3, description: 'Return calculations' }
        ];
      
      case 'boq':
        return [
          ...baseExports,
          { type: 'boq-export', label: 'Bills of Quantities', icon: Building2, description: 'Complete BOQ with variations' },
          { type: 'cost-breakdown', label: 'Cost Breakdown', icon: PieChart, description: 'Cost analysis by category' },
          { type: 'contractor-schedule', label: 'Contractor Schedule', icon: FileText, description: 'Work packages & timelines' }
        ];
      
      case 'project':
        return [
          ...baseExports,
          { type: 'project-summary', label: 'Project Summary', icon: Building2, description: 'Complete project overview' },
          { type: 'financial-summary', label: 'Financial Summary', icon: DollarSign, description: 'Project financials' },
          { type: 'progress-report', label: 'Progress Report', icon: BarChart3, description: 'Timeline & milestones' }
        ];
      
      default:
        return baseExports;
    }
  };

  const exports = getContextualExports();

  const handleExport = (type: string, format: string = 'xlsx') => {
    onExport(type, format);
  };

  return (
    <ContextMenu>
      <ContextMenuTrigger asChild>
        {children}
      </ContextMenuTrigger>
      <ContextMenuContent className="w-56">
        {/* Quick Export Options */}
        <ContextMenuItem onClick={() => handleExport('quick-excel')}>
          <Download className="mr-2 h-4 w-4" />
          Export Template (⚠️ Verify Data)
        </ContextMenuItem>
        
        <ContextMenuSeparator />
        
        {/* Excel Export Submenu */}
        <ContextMenuSub>
          <ContextMenuSubTrigger>
            <FileSpreadsheet className="mr-2 h-4 w-4" />
            Export to Excel
          </ContextMenuSubTrigger>
          <ContextMenuSubContent className="w-64">
            {exports.map((exportOption) => {
              const IconComponent = exportOption.icon;
              return (
                <ContextMenuItem
                  key={exportOption.type}
                  onClick={() => handleExport(exportOption.type, 'xlsx')}
                  className="flex flex-col items-start py-2"
                >
                  <div className="flex items-center w-full">
                    <IconComponent className="mr-2 h-4 w-4" />
                    <span className="font-medium">{exportOption.label}</span>
                  </div>
                  <span className="text-xs text-muted-foreground ml-6">
                    {exportOption.description}
                  </span>
                </ContextMenuItem>
              );
            })}
            
            <ContextMenuSeparator />
            
            {/* Format Options */}
            <ContextMenuItem onClick={() => handleExport('current-data', 'csv')}>
              <FileText className="mr-2 h-4 w-4" />
              Export as CSV
            </ContextMenuItem>
          </ContextMenuSubContent>
        </ContextMenuSub>

        {/* Financial Tools Submenu */}
        {(context === 'financial' || context === 'project') && (
          <>
            <ContextMenuSeparator />
            <ContextMenuSub>
              <ContextMenuSubTrigger>
                <Calculator className="mr-2 h-4 w-4" />
                Financial Tools
              </ContextMenuSubTrigger>
              <ContextMenuSubContent>
                <ContextMenuItem onClick={() => handleExport('fitzgerald-template', 'xlsx')}>
                  <Building2 className="mr-2 h-4 w-4" />
                  Fitzgerald Gardens Template
                </ContextMenuItem>
                <ContextMenuItem onClick={() => handleExport('financial-calculator', 'xlsx')}>
                  <Calculator className="mr-2 h-4 w-4" />
                  Financial Calculator
                </ContextMenuItem>
                <ContextMenuItem onClick={() => handleExport('scenario-analysis', 'xlsx')}>
                  <BarChart3 className="mr-2 h-4 w-4" />
                  Scenario Analysis
                </ContextMenuItem>
              </ContextMenuSubContent>
            </ContextMenuSub>
          </>
        )}

        {/* BOQ Tools Submenu */}
        {(context === 'boq' || context === 'project') && (
          <>
            <ContextMenuSeparator />
            <ContextMenuSub>
              <ContextMenuSubTrigger>
                <Building2 className="mr-2 h-4 w-4" />
                BOQ Tools
              </ContextMenuSubTrigger>
              <ContextMenuSubContent>
                <ContextMenuItem onClick={() => handleExport('boq-template', 'xlsx')}>
                  <FileSpreadsheet className="mr-2 h-4 w-4" />
                  BOQ Template
                </ContextMenuItem>
                <ContextMenuItem onClick={() => handleExport('cost-estimate', 'xlsx')}>
                  <Calculator className="mr-2 h-4 w-4" />
                  Cost Estimate
                </ContextMenuItem>
                <ContextMenuItem onClick={() => handleExport('variation-report', 'xlsx')}>
                  <TrendingUp className="mr-2 h-4 w-4" />
                  Variation Report
                </ContextMenuItem>
              </ContextMenuSubContent>
            </ContextMenuSub>
          </>
        )}
      </ContextMenuContent>
    </ContextMenu>
  );
}