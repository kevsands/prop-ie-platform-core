'use client';

import { useState } from 'react';
import { 
  Calendar,
  TrendingUp,
  Download,
  Eye,
  DollarSign,
  Users,
  Building,
  ChartBar,
  Filter,
  FileText,
  Zap,
  Activity,
  Target,
  AlertCircle,
  CheckCircle,
  Clock
} from 'lucide-react';
import { 
  AreaChart, 
  Area, 
  BarChart, 
  Bar, 
  LineChart, 
  Line,
  PieChart, 
  Pie, 
  Cell,
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip, 
  Legend, 
  ResponsiveContainer,
  ComposedChart,
  RadarChart,
  PolarGrid,
  PolarAngleAxis,
  PolarRadiusAxis,
  Radar
} from 'recharts';

// Mock data for charts
const revenueData = [
  { month: 'Jan', actual: 2400000, projected: 2200000, sales: 12 },
  { month: 'Feb', actual: 2800000, projected: 2600000, sales: 15 },
  { month: 'Mar', actual: 3200000, projected: 3000000, sales: 18 },
  { month: 'Apr', actual: 3500000, projected: 3400000, sales: 20 },
  { month: 'May', actual: 3800000, projected: 3700000, sales: 22 },
  { month: 'Jun', actual: 4200000, projected: 4000000, sales: 25 },
];

const projectPerformance = [
  { project: 'Riverside Heights', completion: 85, budget: 92, timeline: 88 },
  { project: 'Oak Valley', completion: 72, budget: 78, timeline: 75 },
  { project: 'Sunset Gardens', completion: 60, budget: 85, timeline: 70 },
  { project: 'Marina Towers', completion: 45, budget: 95, timeline: 80 },
];

const salesFunnel = [
  { stage: 'Leads', value: 150 },
  { stage: 'Qualified', value: 95 },
  { stage: 'Viewing', value: 70 },
  { stage: 'Offer', value: 45 },
  { stage: 'Negotiation', value: 30 },
  { stage: 'Closed', value: 22 },
];

const customerSatisfaction = [
  { category: 'Build Quality', score: 92 },
  { category: 'Communication', score: 88 },
  { category: 'Timeline', score: 75 },
  { category: 'Value', score: 85 },
  { category: 'Support', score: 90 },
];

const COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6'];

export default function AnalyticsPage() {
  const [timeRange, setTimeRange] = useState('month');
  const [selectedMetric, setSelectedMetric] = useState('revenue');
  const [showExportModal, setShowExportModal] = useState(false);

  const ExportModal = () => (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-xl p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold mb-4">Export Analytics Report</h3>
        
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Report Type</label>
            <select className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option>Executive Summary</option>
              <option>Detailed Analytics</option>
              <option>Financial Report</option>
              <option>Project Performance</option>
              <option>Sales Analysis</option>
            </select>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Date Range</label>
            <select className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option>Last 30 Days</option>
              <option>Last Quarter</option>
              <option>Last 6 Months</option>
              <option>Last Year</option>
              <option>Custom Range</option>
            </select>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Format</label>
            <div className="grid grid-cols-3 gap-3">
              <button className="px-4 py-2 border-2 border-blue-600 text-blue-600 rounded-lg hover:bg-blue-50">
                PDF
              </button>
              <button className="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                Excel
              </button>
              <button className="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                CSV
              </button>
            </div>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Include in Report</label>
            <div className="space-y-2">
              {['Charts & Graphs', 'Raw Data', 'AI Insights', 'Recommendations'].map(item => (
                <label key={item} className="flex items-center space-x-2">
                  <input type="checkbox" className="rounded border-gray-300" defaultChecked />
                  <span className="text-sm">{item}</span>
                </label>
              ))}
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex space-x-3">
          <button
            onClick={() => setShowExportModal(false)}
            className="flex-1 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
          >
            Cancel
          </button>
          <button
            onClick={() => setShowExportModal(false)}
            className="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            Generate Report
          </button>
        </div>
      </div>
    </div>
  );

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      {/* Header */}
      <div className="flex items-center justify-between mb-8">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Analytics & Insights</h1>
          <p className="text-gray-600 mt-1">Real-time performance metrics and AI-powered insights</p>
        </div>
        <div className="flex space-x-3">
          <select 
            value={timeRange}
            onChange={(e) => setTimeRange(e.target.value)}
            className="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="day">Today</option>
            <option value="week">This Week</option>
            <option value="month">This Month</option>
            <option value="quarter">This Quarter</option>
            <option value="year">This Year</option>
          </select>
          <button 
            onClick={() => setShowExportModal(true)}
            className="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-2"
          >
            <Download className="w-4 h-4" />
            <span>Export</span>
          </button>
          <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2">
            <Calendar className="w-4 h-4" />
            <span>Schedule Report</span>
          </button>
        </div>
      </div>

      {/* AI Insights Banner */}
      <div className="bg-gradient-to-r from-purple-600 to-indigo-600 rounded-xl p-4 text-white mb-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="p-2 bg-white/20 rounded-lg backdrop-blur-sm">
              <Zap className="w-5 h-5" />
            </div>
            <div>
              <p className="font-medium">AI-Powered Insights</p>
              <p className="text-sm opacity-90">Revenue up 23% • 3 projects ahead of schedule • 2 risk alerts</p>
            </div>
          </div>
          <button className="px-4 py-2 bg-white/20 hover:bg-white/30 rounded-lg backdrop-blur-sm transition-colors">
            View All Insights
          </button>
        </div>
      </div>

      {/* KPI Cards */}
      <div className="grid grid-cols-4 gap-6 mb-8">
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <div className="flex items-center justify-between mb-4">
            <div className="p-2 bg-green-100 rounded-lg">
              <DollarSign className="w-6 h-6 text-green-600" />
            </div>
            <span className="text-sm text-green-600 font-medium">+15%</span>
          </div>
          <p className="text-sm text-gray-600">Total Revenue</p>
          <p className="text-2xl font-bold text-gray-900">€12.8M</p>
          <p className="text-xs text-gray-500 mt-1">YTD Performance</p>
        </div>
        
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <div className="flex items-center justify-between mb-4">
            <div className="p-2 bg-blue-100 rounded-lg">
              <Building className="w-6 h-6 text-blue-600" />
            </div>
            <span className="text-sm text-blue-600 font-medium">+3</span>
          </div>
          <p className="text-sm text-gray-600">Active Projects</p>
          <p className="text-2xl font-bold text-gray-900">12</p>
          <p className="text-xs text-gray-500 mt-1">4 in planning phase</p>
        </div>
        
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <div className="flex items-center justify-between mb-4">
            <div className="p-2 bg-purple-100 rounded-lg">
              <Users className="w-6 h-6 text-purple-600" />
            </div>
            <span className="text-sm text-purple-600 font-medium">+28%</span>
          </div>
          <p className="text-sm text-gray-600">Active Customers</p>
          <p className="text-2xl font-bold text-gray-900">847</p>
          <p className="text-xs text-gray-500 mt-1">152 new this month</p>
        </div>
        
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <div className="flex items-center justify-between mb-4">
            <div className="p-2 bg-orange-100 rounded-lg">
              <TrendingUp className="w-6 h-6 text-orange-600" />
            </div>
            <span className="text-sm text-orange-600 font-medium">92%</span>
          </div>
          <p className="text-sm text-gray-600">Customer Satisfaction</p>
          <p className="text-2xl font-bold text-gray-900">4.8/5</p>
          <p className="text-xs text-gray-500 mt-1">Based on 312 reviews</p>
        </div>
      </div>

      {/* Main Charts */}
      <div className="grid grid-cols-2 gap-6 mb-8">
        {/* Revenue Trends */}
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold">Revenue Trends</h3>
            <div className="flex items-center space-x-2">
              <button className="p-1 hover:bg-gray-100 rounded">
                <Eye className="w-4 h-4 text-gray-600" />
              </button>
              <button className="p-1 hover:bg-gray-100 rounded">
                <Download className="w-4 h-4 text-gray-600" />
              </button>
            </div>
          </div>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <ComposedChart data={revenueData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="month" />
                <YAxis yAxisId="left" tickFormatter={(value) => `€${(value / 1000000).toFixed(1)}M`} />
                <YAxis yAxisId="right" orientation="right" />
                <Tooltip formatter={(value) => `€${(value / 1000000).toFixed(2)}M`} />
                <Legend />
                <Area yAxisId="left" type="monotone" dataKey="actual" fill="#3B82F6" stroke="#3B82F6" fillOpacity={0.2} name="Actual Revenue" />
                <Line yAxisId="left" type="monotone" dataKey="projected" stroke="#10B981" strokeDasharray="5 5" name="Projected" />
                <Bar yAxisId="right" dataKey="sales" fill="#F59E0B" name="Sales Count" />
              </ComposedChart>
            </ResponsiveContainer>
          </div>
        </div>

        {/* Project Performance */}
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold">Project Performance</h3>
            <select className="text-sm border border-gray-300 rounded px-2 py-1">
              <option>All Projects</option>
              <option>Active</option>
              <option>Planning</option>
              <option>Completed</option>
            </select>
          </div>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <RadarChart data={projectPerformance}>
                <PolarGrid />
                <PolarAngleAxis dataKey="project" />
                <PolarRadiusAxis angle={30} domain={[0, 100]} />
                <Radar name="Completion %" dataKey="completion" stroke="#3B82F6" fill="#3B82F6" fillOpacity={0.6} />
                <Radar name="Budget Health" dataKey="budget" stroke="#10B981" fill="#10B981" fillOpacity={0.6} />
                <Radar name="Timeline" dataKey="timeline" stroke="#F59E0B" fill="#F59E0B" fillOpacity={0.6} />
                <Legend />
              </RadarChart>
            </ResponsiveContainer>
          </div>
        </div>
      </div>

      {/* Secondary Charts */}
      <div className="grid grid-cols-3 gap-6 mb-8">
        {/* Sales Funnel */}
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <h3 className="text-lg font-semibold mb-4">Sales Funnel</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={salesFunnel} layout="horizontal">
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis type="number" />
                <YAxis type="category" dataKey="stage" />
                <Tooltip />
                <Bar dataKey="value" fill="#3B82F6" />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </div>

        {/* Customer Satisfaction */}
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <h3 className="text-lg font-semibold mb-4">Customer Satisfaction</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={customerSatisfaction}
                  cx="50%"
                  cy="50%"
                  innerRadius={60}
                  outerRadius={80}
                  fill="#8884d8"
                  dataKey="score"
                  label={({ category, score }) => `${category}: ${score}`}
                >
                  {customerSatisfaction.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </div>
        </div>

        {/* Quick Metrics */}
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <h3 className="text-lg font-semibold mb-4">Quick Metrics</h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div className="flex items-center space-x-3">
                <CheckCircle className="w-5 h-5 text-green-600" />
                <span className="text-sm font-medium">Completed Projects</span>
              </div>
              <span className="text-sm font-bold">24</span>
            </div>
            <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div className="flex items-center space-x-3">
                <Clock className="w-5 h-5 text-yellow-600" />
                <span className="text-sm font-medium">Avg. Build Time</span>
              </div>
              <span className="text-sm font-bold">8.2 months</span>
            </div>
            <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div className="flex items-center space-x-3">
                <Target className="w-5 h-5 text-blue-600" />
                <span className="text-sm font-medium">Lead Conversion</span>
              </div>
              <span className="text-sm font-bold">14.7%</span>
            </div>
            <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div className="flex items-center space-x-3">
                <AlertCircle className="w-5 h-5 text-red-600" />
                <span className="text-sm font-medium">Active Issues</span>
              </div>
              <span className="text-sm font-bold">3</span>
            </div>
          </div>
        </div>
      </div>

      {/* Real-time Activity Feed */}
      <div className="bg-white rounded-lg border border-gray-200 p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold">Real-time Activity</h3>
          <Activity className="w-5 h-5 text-gray-600 animate-pulse" />
        </div>
        <div className="space-y-3">
          {[
            { time: '2 min ago', event: 'New lead: John Smith interested in Riverside Heights', type: 'lead' },
            { time: '15 min ago', event: 'Contract signed: Unit 4B at Oak Valley', type: 'success' },
            { time: '1 hour ago', event: 'Site inspection completed: Marina Towers Block C', type: 'info' },
            { time: '2 hours ago', event: 'Budget alert: Sunset Gardens exceeding by 5%', type: 'warning' },
            { time: '3 hours ago', event: 'Customer review: 5 stars from Sarah Murphy', type: 'success' },
          ].map((item, index) => (
            <div key={index} className="flex items-start space-x-3">
              <div className={`w-2 h-2 rounded-full mt-1.5 ${
                item.type === 'success' ? 'bg-green-600' :
                item.type === 'warning' ? 'bg-yellow-600' :
                item.type === 'lead' ? 'bg-blue-600' :
                'bg-gray-600'
              }`} />
              <div className="flex-1">
                <p className="text-sm text-gray-900">{item.event}</p>
                <p className="text-xs text-gray-500">{item.time}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {showExportModal && <ExportModal />}
    </div>
  );
}