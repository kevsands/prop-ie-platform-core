'use client';

import React, { useState, useEffect } from 'react';
import { usePathname } from 'next/navigation';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { 
  Calculator, 
  FileSpreadsheet, 
  Building2, 
  TrendingUp, 
  Download,
  Upload,
  Zap,
  X,
  ChevronRight,
  Euro,
  BarChart3,
  PieChart
} from 'lucide-react';
import { BOQQuickView } from './BOQQuickView';
import { FinancialCalculator } from './FinancialCalculator';
import { ExcelToolsHub } from './ExcelToolsHub';

interface ContextualToolsPanelProps {
  projectId?: string;
  isVisible: boolean;
  onClose: () => void;
  context: 'financial' | 'construction' | 'general' | 'project';
  selectedData?: any;
}

export function ContextualToolsPanel({ 
  projectId, 
  isVisible, 
  onClose, 
  context,
  selectedData 
}: ContextualToolsPanelProps) {
  const pathname = usePathname();
  const [activeTab, setActiveTab] = useState('overview');
  const [quickMetrics, setQuickMetrics] = useState({
    totalCost: 0,
    variance: 0,
    completion: 0,
    roi: 0
  });

  // Determine which tools to show based on context
  const getContextualTools = () => {
    switch (context) {
      case 'financial':
        return ['calculator', 'boq', 'excel', 'appraisal'];
      case 'construction':
        return ['boq', 'calculator', 'excel'];
      case 'project':
        return ['overview', 'boq', 'calculator', 'excel'];
      default:
        return ['overview', 'calculator'];
    }
  };

  const tools = getContextualTools();

  // Context-aware notifications
  const getContextualNotifications = () => {
    const notifications = [];
    
    if (context === 'financial' && selectedData?.type === 'cost-item') {
      notifications.push({
        type: 'info',
        message: 'BOQ item selected - view detailed cost breakdown',
        action: 'View BOQ'
      });
    }
    
    if (pathname.includes('financial') && quickMetrics.variance > 10) {
      notifications.push({
        type: 'warning',
        message: `Cost variance of ${quickMetrics.variance}% detected`,
        action: 'Analyze'
      });
    }

    return notifications;
  };

  if (!isVisible) return null;

  return (
    <div className="fixed right-0 top-0 h-full w-80 bg-background border-l shadow-lg z-50 overflow-hidden">
      <div className="flex flex-col h-full">
        {/* Header */}
        <div className="flex items-center justify-between p-4 border-b">
          <div className="flex items-center gap-2">
            <Zap className="h-5 w-5 text-primary" />
            <h3 className="font-semibold">Smart Tools</h3>
            <Badge variant="secondary" className="text-xs">
              {context}
            </Badge>
          </div>
          <Button variant="ghost" size="sm" onClick={onClose}>
            <X className="h-4 w-4" />
          </Button>
        </div>

        {/* Contextual Notifications */}
        {getContextualNotifications().length > 0 && (
          <div className="p-3 bg-muted/50">
            {getContextualNotifications().map((notification, index) => (
              <div key={index} className="flex items-center justify-between text-sm mb-2 last:mb-0">
                <span className="text-muted-foreground">{notification.message}</span>
                <Button variant="link" size="sm" className="h-auto p-0 text-xs">
                  {notification.action}
                  <ChevronRight className="h-3 w-3 ml-1" />
                </Button>
              </div>
            ))}
          </div>
        )}

        {/* Tools Tabs */}
        <div className="flex-1 overflow-hidden">
          <Tabs value={activeTab} onValueChange={setActiveTab} className="h-full flex flex-col">
            <TabsList className="grid grid-cols-4 m-2">
              {tools.includes('overview') && (
                <TabsTrigger value="overview" className="text-xs">
                  <BarChart3 className="h-4 w-4" />
                </TabsTrigger>
              )}
              {tools.includes('boq') && (
                <TabsTrigger value="boq" className="text-xs">
                  <Building2 className="h-4 w-4" />
                </TabsTrigger>
              )}
              {tools.includes('calculator') && (
                <TabsTrigger value="calculator" className="text-xs">
                  <Calculator className="h-4 w-4" />
                </TabsTrigger>
              )}
              {tools.includes('excel') && (
                <TabsTrigger value="excel" className="text-xs">
                  <FileSpreadsheet className="h-4 w-4" />
                </TabsTrigger>
              )}
            </TabsList>

            <div className="flex-1 overflow-y-auto">
              {/* Overview Tab */}
              {tools.includes('overview') && (
                <TabsContent value="overview" className="p-3 space-y-3 m-0">
                  <Card>
                    <CardHeader className="pb-2">
                      <CardTitle className="text-sm">Quick Metrics</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      <div className="grid grid-cols-2 gap-3 text-sm">
                        <div>
                          <p className="text-muted-foreground">Total Cost</p>
                          <p className="font-semibold">â‚¬{quickMetrics.totalCost.toLocaleString()}</p>
                        </div>
                        <div>
                          <p className="text-muted-foreground">Variance</p>
                          <p className={`font-semibold ${quickMetrics.variance > 5 ? 'text-red-600' : 'text-green-600'}`}>
                            {quickMetrics.variance > 0 ? '+' : ''}{quickMetrics.variance}%
                          </p>
                        </div>
                        <div>
                          <p className="text-muted-foreground">Completion</p>
                          <p className="font-semibold">{quickMetrics.completion}%</p>
                        </div>
                        <div>
                          <p className="text-muted-foreground">ROI</p>
                          <p className="font-semibold text-green-600">{quickMetrics.roi}%</p>
                        </div>
                      </div>
                      
                      <Separator />
                      
                      <div className="space-y-2">
                        <Button variant="outline" size="sm" className="w-full justify-start">
                          <PieChart className="h-4 w-4 mr-2" />
                          Cost Breakdown
                        </Button>
                        <Button variant="outline" size="sm" className="w-full justify-start">
                          <TrendingUp className="h-4 w-4 mr-2" />
                          Financial Forecast
                        </Button>
                        <Button variant="outline" size="sm" className="w-full justify-start">
                          <FileSpreadsheet className="h-4 w-4 mr-2" />
                          Export to Excel
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                </TabsContent>
              )}

              {/* BOQ Tab */}
              {tools.includes('boq') && (
                <TabsContent value="boq" className="p-3 m-0">
                  <BOQQuickView projectId={projectId} selectedItem={selectedData} />
                </TabsContent>
              )}

              {/* Calculator Tab */}
              {tools.includes('calculator') && (
                <TabsContent value="calculator" className="p-3 m-0">
                  <FinancialCalculator 
                    projectData={selectedData} 
                    context={context}
                  />
                </TabsContent>
              )}

              {/* Excel Tools Tab */}
              {tools.includes('excel') && (
                <TabsContent value="excel" className="p-3 m-0">
                  <ExcelToolsHub 
                    projectId={projectId}
                    context={context}
                    selectedData={selectedData}
                  />
                </TabsContent>
              )}
            </div>
          </Tabs>
        </div>

        {/* Quick Actions Footer */}
        <div className="border-t p-3">
          <div className="grid grid-cols-2 gap-2">
            <Button variant="outline" size="sm">
              <Download className="h-4 w-4 mr-1" />
              Export
            </Button>
            <Button variant="outline" size="sm">
              <Upload className="h-4 w-4 mr-1" />
              Import
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}