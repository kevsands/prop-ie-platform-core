name: Terraform Infrastructure Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - dev
          - staging
          - production
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  TF_DIR: infrastructure/terraform
  AWS_REGION: eu-west-1

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_DIR }}
        continue-on-error: true

      - name: Determine Environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "action=plan" >> $GITHUB_OUTPUT
          else
            # For push to main or other events
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "action=apply" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config=backend-${{ steps.env.outputs.environment }}.conf
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Plan
        id: plan
        if: steps.env.outputs.action == 'plan' || steps.env.outputs.action == 'apply'
        run: |
          terraform plan \
            -var-file=terraform-${{ steps.env.outputs.environment }}.tfvars \
            -input=false \
            -no-color \
            -out=tfplan.binary
          terraform show -no-color tfplan.binary > tfplan.txt
        working-directory: ${{ env.TF_DIR }}

      - name: Upload Plan Artifact
        if: steps.env.outputs.action == 'plan' || steps.env.outputs.action == 'apply'
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-${{ steps.env.outputs.environment }}
          path: ${{ env.TF_DIR }}/tfplan.txt
          retention-days: 5

      - name: Add Plan to PR
        if: github.event_name == 'pull_request' && steps.env.outputs.action == 'plan'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('${{ env.TF_DIR }}/tfplan.txt', 'utf8');
            const truncatedOutput = planOutput.length > 65000 
              ? planOutput.substring(0, 65000) + '\n\n... Plan too long to display completely. See artifacts for full plan ...'
              : planOutput;
            
            const comment = `## Terraform Plan for \`${{ steps.env.outputs.environment }}\`
            
            <details>
            <summary>Expand to view plan</summary>
            
            \`\`\`
            ${truncatedOutput}
            \`\`\`
            
            </details>
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Terraform Apply
        id: apply
        if: >
          (steps.env.outputs.action == 'apply' && 
          (github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'))
        run: |
          terraform apply -auto-approve tfplan.binary
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Destroy
        id: destroy
        if: steps.env.outputs.action == 'destroy' && github.event_name == 'workflow_dispatch'
        run: |
          terraform destroy \
            -var-file=terraform-${{ steps.env.outputs.environment }}.tfvars \
            -auto-approve
        working-directory: ${{ env.TF_DIR }}

      - name: Output Apply Summary
        if: steps.apply.outcome == 'success'
        run: |
          echo "## Terraform Apply Summary for ${{ steps.env.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Infrastructure successfully deployed to ${{ steps.env.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          
          # Extract key outputs
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Key Outputs" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          terraform output | grep -v sensitive | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
        working-directory: ${{ env.TF_DIR }}
        continue-on-error: true

      - name: Output Destroy Summary
        if: steps.destroy.outcome == 'success'
        run: |
          echo "## Terraform Destroy Summary for ${{ steps.env.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Infrastructure successfully destroyed in ${{ steps.env.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
        working-directory: ${{ env.TF_DIR }}
        continue-on-error: true