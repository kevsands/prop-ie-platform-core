name: Test Suite

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests
        run: npm test
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage
          path: coverage/
  
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run integration tests
        run: npm run test:integration:ci
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-coverage
          path: coverage/
  
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: npm run build
          start: npm run start
          wait-on: 'http://localhost:3000'
          browser: chrome
          headless: true
      
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
  
  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security checks
        run: npm run security-check
      
      - name: Run dependency scan
        run: npm run dependency-scan
  
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Start application
        run: npm run start &
        env:
          NODE_ENV: production
      
      - name: Wait for application to start
        run: npx wait-on http://localhost:3000
      
      - name: Run Lighthouse CI
        run: npm run performance:ci
      
      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-reports
          path: .lighthouseci/
  
  test-report:
    name: Test Report
    needs: [unit-tests, integration-tests, e2e-tests, security-tests, performance-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Merge coverage reports
        run: |
          npm install -g nyc
          mkdir -p .nyc_output
          cp unit-test-coverage/coverage-final.json .nyc_output/unit.json
          cp integration-test-coverage/coverage-final.json .nyc_output/integration.json
          nyc report --reporter=html --reporter=text
      
      - name: Generate test report
        run: |
          echo "# Test Results Summary" > test-report.md
          echo "## Unit Tests" >> test-report.md
          cat unit-test-coverage/lcov-report/index.html | grep -o 'Lines.*%' >> test-report.md
          echo "## Integration Tests" >> test-report.md
          cat integration-test-coverage/lcov-report/index.html | grep -o 'Lines.*%' >> test-report.md
          echo "## Performance Tests" >> test-report.md
          ls -la lighthouse-reports/ >> test-report.md
      
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.md