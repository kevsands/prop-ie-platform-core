name: CI/CD Pipeline

on:
  push:
    branches: [development, staging, production]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [development, staging, production]

env:
  NODE_VERSION: 20
  AMPLIFY_ROLE_ARN: ${{ secrets.AMPLIFY_ROLE_ARN }}
  AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
  AWS_REGION: us-east-1

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Validate Package Lock
        run: npm run verify-lockfile

      - name: Type Check
        run: npm run type-check

      - name: Lint Code
        run: npm run lint

      - name: Security Check
        run: npm run security-check

  test:
    name: Run Tests
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test:ci
        
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          
      - name: Run Accessibility Tests
        run: npm run a11y-audit:ci

  build-preview:
    name: Build Preview
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Bundle Analysis
        run: npm run performance:analyze
        
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/
          retention-days: 1

  deploy-preview:
    name: Deploy PR Preview
    if: github.event_name == 'pull_request'
    needs: build-preview
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: .next/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AMPLIFY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate Preview URL (Branch-Based)
        id: preview-url
        run: |
          BRANCH_NAME=$(echo ${{ github.head_ref }} | sed 's/[^a-zA-Z0-9]/-/g')
          PR_ID=${{ github.event.pull_request.number }}
          echo "PREVIEW_URL=https://pr-${PR_ID}.${BRANCH_NAME}.amplifyapp.com" >> $GITHUB_ENV
          echo "preview_url=https://pr-${PR_ID}.${BRANCH_NAME}.amplifyapp.com" >> $GITHUB_OUTPUT

      - name: Deploy to AWS Amplify
        run: |
          aws amplify start-job \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name ${{ github.head_ref }} \
            --job-type DEPLOY

      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment is ready! Visit: ${{ steps.preview-url.outputs.preview_url }}`
            })

  performance-test:
    name: Performance Testing
    if: github.event_name == 'pull_request'
    needs: deploy-preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Performance Tests
        run: npm run performance:ci

  deploy-production:
    name: Deploy to Production
    if: github.event_name == 'push' && github.ref == 'refs/heads/production'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: production
      url: https://prop-ie-app.com
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AMPLIFY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger Amplify Deployment
        run: |
          aws amplify start-job \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name production \
            --job-type RELEASE

  deploy-staging:
    name: Deploy to Staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: staging
      url: https://staging.prop-ie-app.com
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AMPLIFY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger Amplify Deployment
        run: |
          aws amplify start-job \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name staging \
            --job-type RELEASE

  deploy-development:
    name: Deploy to Development
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: development
      url: https://dev.prop-ie-app.com
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AMPLIFY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger Amplify Deployment
        run: |
          aws amplify start-job \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name development \
            --job-type RELEASE