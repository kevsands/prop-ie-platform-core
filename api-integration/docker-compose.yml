version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: prop-ie-app-dev
    ports:
      - "3000:3000"
      # Development debug port
      - "9229:9229"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      # Mount cache directories separately for better performance
      - npm-cache:/app/.npm
      - next-cache:/app/.next/cache
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_ENV=development
      - NEXT_PUBLIC_API_ENDPOINT=http://api-mock:4000
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      # Add AWS configuration for local development
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_ENDPOINT=http://localstack:4566
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    depends_on:
      - api-mock
      - localstack
    networks:
      - prop-network

  api-mock:
    image: node:20-alpine
    container_name: prop-ie-api-mock
    working_dir: /app
    command: npm run start:mock-server
    volumes:
      - ./mock-server:/app
      - mock-node-modules:/app/node_modules
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - prop-network

  localstack:
    image: localstack/localstack:latest
    container_name: prop-ie-localstack
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,dynamodb,cognito,appsync,lambda,secretsmanager
      - DEBUG=1
      - PERSISTENCE=1
      - DATA_DIR=/tmp/localstack/data
      # Default AWS credentials
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./localstack-data:/tmp/localstack/data
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - prop-network

  # Database container for local development
  postgres:
    image: postgres:15
    container_name: prop-ie-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=prop_app
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Init scripts
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - prop-network

  # Bundle analyzer for performance visualization
  bundle-analyzer:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: prop-ie-bundle-analyzer
    command: npm run analyze
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - ANALYZE=true
    profiles:
      - analyze
    networks:
      - prop-network

volumes:
  node_modules:
  mock-node-modules:
  npm-cache:
  next-cache:
  postgres-data:

networks:
  prop-network:
    driver: bridge