'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { useAuth } from '@/context/AuthContext';

export default function DevLoginPage() {
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const router = useRouter();
  const { signIn } = useAuth();

  const handleLogin = async (userEmail: string) => {
    setIsLoading(true);
    setEmail(userEmail);
    
    try {
      // Set a mock auth cookie for development
      document.cookie = `mockAuth=${userEmail}; path=/; max-age=3600`;
      
      // Use the AuthContext signIn
      const result = await signIn(userEmail, 'password');
      
      if (result.isSignedIn) {
        // Route based on email
        if (userEmail.includes('developer')) {
          router.push('/developer');
        } else if (userEmail.includes('buyer')) {
          router.push('/buyer');
        } else if (userEmail.includes('agent')) {
          router.push('/agents');
        } else if (userEmail.includes('solicitor')) {
          router.push('/solicitor');
        } else {
          router.push('/dashboard');
        }
      }
    } catch (err) {
      console.error('Login error:', err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-12 px-4">
      <div className="max-w-md mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-8 text-center">
          Development Login
        </h1>
        
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
          <p className="text-sm text-yellow-800">
            <strong>Development Mode:</strong> This login bypasses authentication for testing purposes.
          </p>
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <h2 className="text-xl font-semibold mb-4">Quick Login Options</h2>
          
          <div className="space-y-3">
            <button
              onClick={() => handleLogin('developer@example.com')}
              disabled={isLoading}
              className="w-full bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 disabled:opacity-50 transition-colors"
            >
              <div className="flex items-center justify-center space-x-2">
                <span>Login as Developer</span>
                {isLoading && email === 'developer@example.com' && (
                  <span className="text-xs">(Loading...)</span>
                )}
              </div>
              <span className="text-xs opacity-80">Access developer portal at /developer</span>
            </button>
            
            <button
              onClick={() => handleLogin('buyer@example.com')}
              disabled={isLoading}
              className="w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50 transition-colors"
            >
              <div className="flex items-center justify-center space-x-2">
                <span>Login as Buyer</span>
                {isLoading && email === 'buyer@example.com' && (
                  <span className="text-xs">(Loading...)</span>
                )}
              </div>
              <span className="text-xs opacity-80">Access buyer dashboard at /buyer</span>
            </button>
            
            <button
              onClick={() => handleLogin('agent@example.com')}
              disabled={isLoading}
              className="w-full bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 disabled:opacity-50 transition-colors"
            >
              <div className="flex items-center justify-center space-x-2">
                <span>Login as Estate Agent</span>
                {isLoading && email === 'agent@example.com' && (
                  <span className="text-xs">(Loading...)</span>
                )}
              </div>
              <span className="text-xs opacity-80">Access agent dashboard at /agents</span>
            </button>
            
            <button
              onClick={() => handleLogin('solicitor@example.com')}
              disabled={isLoading}
              className="w-full bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700 disabled:opacity-50 transition-colors"
            >
              <div className="flex items-center justify-center space-x-2">
                <span>Login as Solicitor</span>
                {isLoading && email === 'solicitor@example.com' && (
                  <span className="text-xs">(Loading...)</span>
                )}
              </div>
              <span className="text-xs opacity-80">Access solicitor dashboard at /solicitor</span>
            </button>
          </div>
        </div>
        
        <div className="mt-6 bg-white rounded-lg shadow-md p-6">
          <h3 className="font-semibold mb-2">Direct Links (if already logged in):</h3>
          <div className="space-y-2 text-sm">
            <a href="/developer" className="block text-blue-600 hover:underline">→ Developer Portal</a>
            <a href="/buyer" className="block text-blue-600 hover:underline">→ Buyer Dashboard</a>
            <a href="/agents" className="block text-blue-600 hover:underline">→ Agent Dashboard</a>
            <a href="/solicitor" className="block text-blue-600 hover:underline">→ Solicitor Dashboard</a>
          </div>
        </div>
      </div>
    </div>
  );
}