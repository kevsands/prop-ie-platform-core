'use client';

import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Shield, AlertTriangle, CheckCircle, User } from 'lucide-react';

export interface AMLCheck {
  id: string;
  caseId: string;
  clientName: string;
  checkType: 'identity' | 'address' | 'sanctions' | 'pep' | 'source-of-funds';
  status: 'pending' | 'in-progress' | 'passed' | 'failed' | 'review-required';
  performedBy: string;
  performedDate: Date;
  expiryDate: Date;
  riskLevel: 'low' | 'medium' | 'high';
  notes?: string;
}

export function AMLCompliance() {
  const [checkssetChecks] = useState<AMLCheck[]>([]);
  const [filterStatussetFilterStatus] = useState<string>('all');

  const filteredChecks = checks.filter(check => 
    filterStatus === 'all' || check.status === filterStatus
  );

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'passed':
        return <CheckCircle className="h-4 w-4 text-green-500" />
  );
      case 'failed':
      case 'review-required':
        return <AlertTriangle className="h-4 w-4 text-yellow-500" />
  );
      default:
        return <Shield className="h-4 w-4 text-gray-500" />
  );
    }
  };

  const getRiskColor = (risk: string) => {
    switch (risk) {
      case 'high':
        return 'destructive';
      case 'medium':
        return 'warning';
      default:
        return 'success';
    }
  };

  return (
    <div className="p-6">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">AML Compliance</h1>
        <Button variant="default">
          <Shield className="mr-2 h-4 w-4" />
          Run Check
        </Button>
      </div>

      <Card className="p-4 mb-6">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="text-center">
            <h3 className="text-sm font-medium text-gray-500">Total Checks</h3>
            <p className="text-2xl font-bold">{checks.length}</p>
          </div>
          <div className="text-center">
            <h3 className="text-sm font-medium text-gray-500">Passed</h3>
            <p className="text-2xl font-bold text-green-600">
              {checks.filter(c => c.status === 'passed').length}
            </p>
          </div>
          <div className="text-center">
            <h3 className="text-sm font-medium text-gray-500">Failed</h3>
            <p className="text-2xl font-bold text-red-600">
              {checks.filter(c => c.status === 'failed').length}
            </p>
          </div>
          <div className="text-center">
            <h3 className="text-sm font-medium text-gray-500">Review Required</h3>
            <p className="text-2xl font-bold text-yellow-600">
              {checks.filter(c => c.status === 'review-required').length}
            </p>
          </div>
        </div>
      </Card>

      <div className="mb-4">
        <select
          className="px-4 py-2 border rounded-lg"
          value={filterStatus}
          onChange={(e: any) => setFilterStatus(e.target.value)}
        >
          <option value="all">All Checks</option>
          <option value="pending">Pending</option>
          <option value="in-progress">In Progress</option>
          <option value="passed">Passed</option>
          <option value="failed">Failed</option>
          <option value="review-required">Review Required</option>
        </select>
      </div>

      <div className="grid gap-4">
        {filteredChecks.map((check: any) => (
          <Card key={check.id} className="p-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                {getStatusIcon(check.status)}
                <div>
                  <div className="flex items-center gap-2 mb-1">
                    <h3 className="font-semibold">{check.clientName}</h3>
                    <Badge variant={getRiskColor(check.riskLevel) as any}>
                      {check.riskLevel} risk
                    </Badge>
                  </div>
                  <div className="flex items-center gap-4 text-sm text-gray-600">
                    <Badge variant="outline">{check.checkType}</Badge>
                    <span className="flex items-center">
                      <User className="h-3 w-3 mr-1" />
                      {check.performedBy}
                    </span>
                    <span>Expires: {new Date(check.expiryDate).toLocaleDateString()}</span>
                  </div>
                  {check.notes && (
                    <p className="text-sm text-gray-600 mt-1">{check.notes}</p>
                  )}
                </div>
              </div>
              <div className="flex items-center gap-2">
                <Badge>{check.status}</Badge>
                <Button variant="outline" size="sm">View Details</Button>
              </div>
            </div>
          </Card>
        ))}
      </div>
    </div>
  );
}